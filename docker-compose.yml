version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: 'rabbitmq'
    volumes:
      - .:/var/task_Track
    ports:
      - "5672:5672"
      - "15672:15672"
  
  db:
    image: postgres:13.4
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tasksdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminadmin
  
  web:
    restart: always
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py createsuperuser --noinput && python manage.py runserver 0.0.0.0:8000"
    container_name: task_Track
    volumes:
      - .:/var/task_Track
    ports:
      - "8000:8000"
    environment:
      RABBITMQ_SERVER: rabbitmq
    env_file:
      - superuser-variables.env
    depends_on:
      - db
      - rabbitmq
  
  listener:
    restart: always
    build: .
    command: bash -c "python recieve_notification.py"
    volumes:
      - .:/var/task_Track
    environment:
      RABBITMQ_SERVER: rabbitmq
    depends_on:
      - rabbitmq
      - web
  
  celery:
    restart: always
    build: .
    command: celery -A apis worker -l info
    volumes:
      - .:/var/task_Track
    depends_on:
      - rabbitmq
      - web
  
  celery-beat:
    restart: always
    build: .
    command: celery -A apis beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/var/task_Track
    environment:
      - POSTGRES_DB=tasksdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminadmin
    depends_on:
      - db
      - rabbitmq
      - web
  
volumes:
  pgdata:
